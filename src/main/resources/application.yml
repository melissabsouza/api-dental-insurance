server:
  port: ${SERVER_PORT:8080}
  servlet:
    encoding:
      charset: UTF-8
      force-response: true

management:
  endpoints:
    health:
      show-details: always
    web:
      exposure:
        include: health,info,prometheus
      endpoint:
        prometheus:
          enabled: true
  metrics:
    enable:
      all: true
gemini:
  api:
    key: {}

spring:
  application:
    name: dental-insurance-api
  security:
    oauth2:
      client:
        provider:
          keycloak-provider:
            issuer-uri: http://localhost:7080/realms/dental-insurance-realm
        registration:
          keycloak-client:
            provider: keycloak-provider
            authorization-grant-type: authorization_code
            client-id: api-dental
            client-secret: rnYePsaqp6lWn6a1Ddt6peViKcl8Ykqk
            scope: openid
            redirect-uri: "http://localhost:8080/login/oauth2/code/keycloak"

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    queue:
      email: email.clinica.queue
    exchange: clinica.exchange
    routing:
      key: email.clinica.key

  mail:
    host: localhost
    port: 1025
    username: ""
    password: ""
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

  jpa:
    open-in-view: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
    schema: classpath:schema.sql
    data: classpath:data.sql

  messages:
    encoding: UTF-8
    basename: messages

  h2:
    console:
      enabled: true
      path: /h2-console

  devtools:
    restart:
      enabled: true

logging:
  level:
    root: INFO
    br: DEBUG
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE